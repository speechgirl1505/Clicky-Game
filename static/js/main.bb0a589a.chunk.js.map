{"version":3,"sources":["components/Peeps/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["Peeps","props","className","onClick","getHigherScore","id","src","image","Wrapper","children","Title","App","state","friends","score","winLose","a","peeps","filter","friend","clicked","setState","console","log","setTimeout","doOver","randomFriends","window","location","reload","this","array","t","i","m","length","Math","floor","random","map","key","doTheShuffle","Component","ReactDOM","render","document","getElementById"],"mappings":"msCAeeA,MAZf,SAAeC,GACb,OACE,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,eAAeH,EAAMI,MAC9D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,W,MCKTC,MATf,SAAiBP,GAEf,OACF,6BACE,yBAAKC,UAAU,WAAWD,EAAMQ,Y,MCAnBC,MAJf,SAAeT,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMQ,W,OCkFvBE,G,iNA7EbC,MAAQ,CACNC,UACAC,MAAO,EACPC,QAAS,I,EAGZX,e,uCAAiB,WAAMC,GAAN,eAAAW,EAAA,0DAEW,KADnBC,EAAQ,EAAKL,MAAMC,QAAQK,QAAO,SAAAC,GAAM,OAAIA,EAAOd,KAAOA,MACtD,GAAGe,QAFC,uBAGZH,EAAM,GAAGG,SAAU,EAHP,SAIN,EAAKC,SAAS,CAACP,MAAO,EAAKF,MAAME,MAAQ,IAJnC,OAKZQ,QAAQC,IAAI,cACa,IAArB,EAAKX,MAAME,QAEZU,WAAW,EAAKC,OAAO,KACxB,EAAKJ,SAAS,CAACN,QAAS,6CATd,uBAaXS,WAAW,EAAKC,OAAO,KACxB,EAAKJ,SAAS,CAACN,QAAS,mBAdZ,QAgBd,EAAKW,cAAc,EAAKd,MAAMC,SAhBhB,4C,wDAsCdY,O,sBAAS,sBAAAT,EAAA,sEACD,EAAKK,SAAS,CAACP,MAAO,IADrB,OAEPa,OAAOC,SAASC,SAFT,2C,mFAjBTC,KAAKJ,cAAcI,KAAKlB,MAAMC,W,oCAGlBkB,GAGV,IAFA,IAAsBC,EAAGC,EAArBC,EAAIH,EAAMI,OAEPD,GAELD,EAAIG,KAAKC,MAAMD,KAAKE,SAAWJ,KAE/BF,EAAID,EAAMG,GACVH,EAAMG,GAAKH,EAAME,GACjBF,EAAME,GAAKD,EAEb,OAAOD,I,+BAQD,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACA,yBAAK7B,UAAU,UACb,2CACA,oHACA,oGACA,6BAEF,sCAAY4B,KAAKlB,MAAME,MAAvB,cACA,2BAAIgB,KAAKlB,MAAMG,WAGde,KAAKlB,MAAMC,QAAQ0B,KAAI,SAAApB,GAAM,OAC5B,kBAAC,EAAD,CACAf,eAAgB,EAAKA,eACnBC,GAAIc,EAAOd,GACXmC,IAAKrB,EAAOd,GACZE,MAAOY,EAAOZ,MACdkC,aAAc,EAAKA,uB,GAvEbC,cCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bb0a589a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Peeps(props) {\n  return (\n    <div className=\"card\" onClick={() => props.getHigherScore(props.id)} >\n      <div className=\"img-container\">\n        <img src={props.image} />\n      </div>\n      {/* <div className=\"content\">\n      </div> */}\n    </div>\n  );\n}\n\nexport default Peeps;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n\n  return (\n<div>    \n  <div className=\"wrapper\">{props.children}</div>\n  </div>\n  )\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;","import React, { Component } from \"react\";\nimport Peeps from \"./components/Peeps\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./peeps.json\";\nimport './App.css';\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    winLose: \"\"\n  };\n\n getHigherScore = async id => {\n    const peeps = this.state.friends.filter(friend => friend.id === id);\n    if (peeps[0].clicked === false) {\n      peeps[0].clicked = true;\n      await this.setState({score: this.state.score + 1})\n      console.log(\"super test\")\n      if (this.state.score === 9) {\n        // alert(\"You win!\")\n         setTimeout(this.doOver,2000)\n        this.setState({winLose: \"Congrats, I don't know how but you won!\"})\n      }\n    } else {\n      // alert(\"Suck it loser\")\n       setTimeout(this.doOver,2000)\n      this.setState({winLose: \"Suck it Loser!\"})\n    }\n    this.randomFriends(this.state.friends)\n    \n  };\n\n  componentDidMount(){\n    this.randomFriends(this.state.friends)\n  };\n\n  randomFriends(array) {\n      var m = array.length, t, i;\n      // While there remain elements to shuffle…\n      while (m) {\n        // Pick a remaining element…\n        i = Math.floor(Math.random() * m--);\n        // And swap it with the current element.\n        t = array[m];\n        array[m] = array[i];\n        array[i] = t;\n      }\n      return array;\n    }\n\n    doOver = async () => {\n      await this.setState({score: 0})\n      window.location.reload()\n    }\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>\n        <div className=\"header\">\n          <h1>Clicky Game</h1>\n          <h3>Try to get to 9 by clicking a tile just know if you hit the same one twice you lose!</h3>\n          <h5>GIF is reflective of creator of this app while doing this assignment</h5>\n          <hr/>\n        \n        <h4>Score: {this.state.score} | Goal: 9</h4>\n        <p>{this.state.winLose}</p>\n        </div>\n        </Title>\n        {this.state.friends.map(friend => (\n          <Peeps\n          getHigherScore={this.getHigherScore}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n            doTheShuffle={this.doTheShuffle}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}